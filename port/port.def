/* Port definition */

////LAYOUT: acme_yarm
////PERIPHERALS: SERIAL0 ADC0 PWMD0 ICUD0 SPI0 SPI1 I2C0
////CDEFINES: ATMELSAML21 SAML21_VHAL

const PinInfo const _vhalpinmap[] STORED = {
    /* D0   */ MAKE_PIN(PA, 3, HAS_EXT | HAS_ADC), 
    /* D1   */ MAKE_PIN(PA, 2, HAS_EXT | HAS_ADC),
    /* D2   */ MAKE_PIN(PA, 8, HAS_EXT | HAS_ATM | HAS_I2C), 
    /* D3   */ MAKE_PIN(PA, 9, HAS_EXT | HAS_ATM | HAS_I2C),
    /* D4   */ MAKE_PIN(PA, 10, HAS_EXT | HAS_ADC | HAS_ATM),
    /* D5   */ MAKE_PIN(PA, 11, HAS_EXT | HAS_ADC | HAS_ATM),
    /* D6   */ MAKE_PIN(PA, 16, HAS_EXT | HAS_SPI),
    /* D7   */ MAKE_PIN(PA, 17, HAS_EXT | HAS_ATM),
    /* D8   */ MAKE_PIN(PA, 18, HAS_EXT | HAS_ATM | HAS_SPI),
    /* D9   */ MAKE_PIN(PA, 19, HAS_EXT | HAS_ATM | HAS_SPI),
    /* D10  */ MAKE_PIN(PA, 22, HAS_EXT | HAS_SER),
    /* D11  */ MAKE_PIN(PA, 23, HAS_EXT | HAS_SER),
    /* D12  */ MAKE_PIN(PA, 24, HAS_EXT), 
    /* D13  */ MAKE_PIN(PA, 25, HAS_EXT),
    /* D14  */ MAKE_PIN(PA, 6, HAS_EXT | HAS_SPI),
    /* D15  */ MAKE_PIN(PA, 4, HAS_EXT | HAS_SPI),
    /* D16  */ MAKE_PIN(PA, 7, HAS_EXT | HAS_SPI),
    /* D17  */ MAKE_PIN(PA, 5, HAS_EXT),
    /* D18  */ MAKE_PIN(PA, 14, HAS_EXT),
    /* D19  */ MAKE_PIN(PA, 15, HAS_EXT),
    /* D20  */ MAKE_PIN(PA, 27, HAS_EXT),
    /* D21  */ MAKE_PIN(PA, 1, HAS_EXT),
    /* D22  */ MAKE_PIN(PA, 0, HAS_EXT),
};


const PinClass const _analogclass[] STORED = {
    /*                  pin, AINn, 0, periph sel (A-B-...) */
    /* A0  */ MAKE_PIN_CLASS(0, 1, 0, 1),
    /* A1  */ MAKE_PIN_CLASS(1, 0, 0, 1),
    /* A2  */ MAKE_PIN_CLASS(4, 18, 0, 1),
    /* A3  */ MAKE_PIN_CLASS(5, 19, 0, 1),
};

const PinClass const _spiclass[] STORED = {
    /* pin_num, sercom, pad, alternate */
    /* MOSI0 */ MAKE_PIN_CLASS(8, 1, 2, 2),
    /* MISO0 */ MAKE_PIN_CLASS(6, 1, 0, 2),
    /* SCK0  */ MAKE_PIN_CLASS(9, 1, 3, 2),
    /* MOSI1 */ MAKE_PIN_CLASS(14, 0, 2, 3),
    /* MISO1 */ MAKE_PIN_CLASS(15, 0, 0, 3),
    /* SCK1  */ MAKE_PIN_CLASS(16, 0, 3, 3),
};

const PinClass const _i2cclass[] STORED = {
    /* pin_num, sercom, pad, alternate */
    /* SDA0 */ MAKE_PIN_CLASS(2, 2, 0, 3),
    /* SCL0 */ MAKE_PIN_CLASS(3, 2, 1, 3),
};

const PinClass const _pwmclass[] STORED = {
    /* pin_num, tc, channel, alternate */
    /* only tcc allowed */
    /* PWM0 */ MAKE_PIN_CLASS(2, 1, 2, 5),
    /* PWM1 */ MAKE_PIN_CLASS(3, 1, 3, 5),
    /* PWM2 */ MAKE_PIN_CLASS(4, 0, 2, 5),
    /* PWM3 */ MAKE_PIN_CLASS(5, 0, 3, 5),
    /* PWM4 */ MAKE_PIN_CLASS(7, 2, 1, 4),
    /* PWM5 */ MAKE_PIN_CLASS(8, 0, 2, 5),
    /* PWM6 */ MAKE_PIN_CLASS(9, 0, 3, 5),
};

// DATA0 -> TC Channel
// DATA2 -> PIO Peripheral (A = 0, B = 1)

const PinClass const _icuclass[] STORED = {
    /* pin_num, tc, channel, alternate */
    /* only tcc allowed */
    /* PWM0 */ MAKE_PIN_CLASS(2, 1, 2, 5),
    /* PWM1 */ MAKE_PIN_CLASS(3, 1, 3, 5),
    /* PWM2 */ MAKE_PIN_CLASS(4, 0, 2, 5),
    /* PWM3 */ MAKE_PIN_CLASS(5, 0, 3, 5),
    /* PWM4 */ MAKE_PIN_CLASS(7, 2, 1, 4),
    /* PWM5 */ MAKE_PIN_CLASS(8, 0, 2, 5),
    /* PWM6 */ MAKE_PIN_CLASS(9, 0, 3, 5),
};

const PinClass const _canclass[] STORED = {
};

const PinClass const _serclass[] STORED = {
    /* pin_num, sercom, pad, alternate */
    /* RX0 */ MAKE_PIN_CLASS(11, 3, 1, 2),
    /* TX0 */ MAKE_PIN_CLASS(10, 3, 0, 2),
};

const PinClass const _dacclass[] STORED = {
};

const PinClass const _ledclass[] STORED = {
};

const PinClass const _btnclass[] STORED = {
};
